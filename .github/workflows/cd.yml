name: Run Continuous Deployment Go Rent Bike App

on:
  push:
    branches:
      - 'master'

  pull_request:
    branches:
      - 'master'

jobs:
  testing:
    runs-on: ubuntu-latest
    name: 'Run unit test and lint'
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: 1.18
      - name: Run unit test
        run: go test -v ./...
      - name: Run linter with golangci-lint
        uses: golangci/golangci-lint-action@v3

  build:
    runs-on: ubuntu-latest
    name: 'Run golang build'
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: 1.18
      - name: test build golang
        run: go build -o ./build/main .

  deploy:
    runs-on: ubuntu-latest
    name: 'Run automation deployment to EC2 instance'
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-go@v3
        with:
          go-version: 1.18

      - name: Setup QEMU
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push to Docker Hub
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: arvinpaundra/go-rent-bike:latest

      - name: Login to EC2 instance via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ec2-52-77-254-97.ap-southeast-1.compute.amazonaws.com
          username: ubuntu
          key: ${{ secrets.SSH_KEY }}
          port: 22
          script: |
            sudo docker stop go-rent-bike-app
            sudo docker container rm go-rent-bike-app
            sudo docker image rm arvinpaundra/go-rent-bike:latest
            sudo docker pull arvinpaundra/go-rent-bike:latest
            cd my-app
            sudo docker run -d --name go-rent-bike-app -p 80:8080 -v $PWD/.env:/.env arvinpaundra/go-rent-bike:latest
